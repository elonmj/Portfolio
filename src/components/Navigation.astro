---
// Navigation component
const currentPath = Astro.url.pathname;

const navItems = [
    { name: "À Propos", href: "/", icon: "👨‍🎓" },
    { name: "Projets", href: "/projects", icon: "🚀" },
    { name: "Expériences", href: "/experience", icon: "💼" },
    { name: "Formation", href: "/formation", icon: "🎓" },
    { name: "Compétences", href: "/competences", icon: "⚡" },
    { name: "Blog", href: "/blog", icon: "📖" },
    { name: "Coding 🎉", href: "/coding", icon: "💻" },
];

const socialLinks = [
    { name: "GitHub", href: "https://github.com/elonmj", icon: "🔗" },
    {
        name: "LinkedIn",
        href: "https://linkedin.com/in/leonel-vodounou",
        icon: "💼",
    },
];
---

<header
    class="sticky top-0 z-50 w-full border-b border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-[#0a0910]/80 backdrop-blur-md"
>
    <nav class="container flex items-center justify-between py-4">
        <!-- Logo / Brand -->
        <div class="flex items-center space-x-2">
            <a
                href="/"
                class="text-xl font-bold text-gradient hover:opacity-80 transition-opacity"
            >
                Léonel VODOUNOU
            </a>
        </div>

        <!-- Main Navigation -->
        <div class="hidden md:flex items-center space-x-8">
            {
                navItems.map((item) => (
                    <a
                        href={item.href}
                        class={`font-medium transition-colors duration-200 hover:text-blue-600 dark:hover:text-blue-400 ${
                            currentPath === item.href ||
                            (item.href === "/blog" &&
                                currentPath.startsWith("/blog"))
                                ? "text-blue-600 dark:text-blue-400"
                                : "text-gray-700 dark:text-gray-300"
                        }`}
                    >
                        {item.name}
                    </a>
                ))
            }
        </div>

        <!-- Right Side Actions -->
        <div class="flex items-center space-x-4">
            <!-- Search Button -->
            <button
                type="button"
                class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
                aria-label="Search"
            >
                <svg
                    class="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
            </button>

            <!-- Social Links -->
            <div class="hidden md:flex items-center space-x-2">
                {
                    socialLinks.map((link) => (
                        <a
                            href={link.href}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
                            aria-label={link.name}
                        >
                            <span class="text-sm">{link.icon}</span>
                        </a>
                    ))
                }
            </div>

            <!-- Theme Toggle -->
            <button
                id="theme-toggle"
                type="button"
                class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
                aria-label="Toggle theme"
            >
                <svg
                    class="w-5 h-5 hidden dark:block"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                >
                    <path
                        fill-rule="evenodd"
                        d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                        clip-rule="evenodd"></path>
                </svg>
                <svg
                    class="w-5 h-5 block dark:hidden"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                >
                    <path
                        d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
                    ></path>
                </svg>
            </button>

            <!-- Mobile Menu Button -->
            <button
                id="mobile-menu-toggle"
                type="button"
                class="md:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
                aria-label="Toggle mobile menu"
            >
                <svg
                    class="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
        </div>
    </nav>

    <!-- Mobile Menu -->
    <div
        id="mobile-menu"
        class="hidden md:hidden border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-[#0a0910]"
    >
        <div class="container py-4 space-y-4">
            {
                navItems.map((item) => (
                    <a
                        href={item.href}
                        class={`block font-medium transition-colors duration-200 hover:text-blue-600 dark:hover:text-blue-400 ${
                            currentPath === item.href ||
                            (item.href === "/blog" &&
                                currentPath.startsWith("/blog"))
                                ? "text-blue-600 dark:text-blue-400"
                                : "text-gray-700 dark:text-gray-300"
                        }`}
                    >
                        {item.name}
                    </a>
                ))
            }

            <!-- Mobile Social Links -->
            <div
                class="flex items-center space-x-4 pt-4 border-t border-gray-200 dark:border-gray-700"
            >
                {
                    socialLinks.map((link) => (
                        <a
                            href={link.href}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                        >
                            {link.name}
                        </a>
                    ))
                }
            </div>
        </div>
    </div>
</header>

<script>
    // Mobile menu toggle
    document.addEventListener("DOMContentLoaded", () => {
        const mobileMenuToggle = document.getElementById("mobile-menu-toggle");
        const mobileMenu = document.getElementById("mobile-menu");

        if (mobileMenuToggle && mobileMenu) {
            mobileMenuToggle.addEventListener("click", () => {
                mobileMenu.classList.toggle("hidden");
            });
        }
    });
</script>
